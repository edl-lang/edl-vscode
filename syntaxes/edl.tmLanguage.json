{
  "name": "EDL",
  "scopeName": "source.edl",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#variables"
    },
    {
      "include": "#types"
    },
    {
      "include": "#constants"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.edl",
          "match": "//.*$"
        },
        {
          "name": "comment.block.edl",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.edl",
          "match": "\\b(if|else|while|for|do|break|continue|return|switch|case|default)\\b"
        },
        {
          "name": "keyword.declaration.edl",
          "match": "\\b(event|trigger|action|condition|state|transition|handler|listener)\\b"
        },
        {
          "name": "keyword.modifier.edl",
          "match": "\\b(async|sync|parallel|sequential|priority|timeout)\\b"
        },
        {
          "name": "keyword.other.edl",
          "match": "\\b(import|export|module|namespace|use|include)\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.assignment.edl",
          "match": "=|\\+=|-=|\\*=|/=|%=|\\|=|&=|\\^=|<<=|>>="
        },
        {
          "name": "keyword.operator.comparison.edl",
          "match": "==|!=|<=|>=|<|>"
        },
        {
          "name": "keyword.operator.logical.edl",
          "match": "&&|\\|\\||!"
        },
        {
          "name": "keyword.operator.arithmetic.edl",
          "match": "\\+|-|\\*|/|%"
        },
        {
          "name": "keyword.operator.bitwise.edl",
          "match": "&|\\||\\^|~|<<|>>"
        },
        {
          "name": "keyword.operator.event.edl",
          "match": "->|=>|<-|<=>|\\|>"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.edl",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.edl",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.single.edl",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.edl",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.hex.edl",
          "match": "\\b0[xX][0-9a-fA-F]+\\b"
        },
        {
          "name": "constant.numeric.binary.edl",
          "match": "\\b0[bB][01]+\\b"
        },
        {
          "name": "constant.numeric.float.edl",
          "match": "\\b\\d+\\.\\d+([eE][+-]?\\d+)?\\b"
        },
        {
          "name": "constant.numeric.integer.edl",
          "match": "\\b\\d+\\b"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "entity.name.function.edl",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*(?=\\s*\\()"
        },
        {
          "name": "support.function.builtin.edl",
          "match": "\\b(emit|listen|schedule|delay|cancel|log|debug|error|warn|info)\\b"
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "name": "variable.other.constant.edl",
          "match": "\\b[A-Z][A-Z0-9_]*\\b"
        },
        {
          "name": "variable.other.edl",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "storage.type.primitive.edl",
          "match": "\\b(int|float|string|bool|void|any)\\b"
        },
        {
          "name": "storage.type.complex.edl",
          "match": "\\b(Event|State|Transition|Handler|Timer|Queue|Channel)\\b"
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "name": "constant.language.edl",
          "match": "\\b(true|false|null|undefined)\\b"
        }
      ]
    }
  }
}
